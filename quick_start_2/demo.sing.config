report.overwrite=true
trace.overwrite=true
dag.overwrite=true

params {
	outdir="quick_start_output"

}


executor {
	queueSize=4
}


profiles {

	slurm {


		process {
			withName: runFQC {
				memory = '4 GB'
				executor = 'slurm'
				queue = 'medium'
				time = '8h'
			}

			withName: runFlexBar {
				memory = '4 GB'
				executor = 'slurm'
				queue = 'medium'
				time = '48h'
			}

			withName: mapAgainstRRNA {
				memory = '34 GB'
				executor = 'slurm'
				queue = 'medium'
				time = '48h'
			}

			withName: star_align_pair {
				memory = '34 GB'
				executor = 'slurm'
				queue = 'medium'
				time = '48h'
			}

			withName: star_align_first {
				memory = '34 GB'
				executor = 'slurm'
				queue = 'medium'
				time = '48h'
			}

			withName: star_align_second {
				memory = '34 GB'
				executor = 'slurm'
				queue = 'medium'
				time = '48h'
			}

			withName: DCC_step {
				memory = '192 GB'
				executor = 'slurm'
				queue = 'amd-hdr100'
				time ='144h'
				errorStrategy ='retry'
				maxRetries = 10
				cpus = 48
			}

			withName: circtest {
				memory = '16 GB'
				executor = 'slurm'
				queue='medium'
				time='48h'
			}

			withName: circtest_plain {
				executor = 'slurm'
				queue='medium'
				time='48h'
				}


			withName: circtest_plotting {
				memory = '16 GB'
				executor = 'slurm'
				queue = 'medium'
				time='48h'
				}


			withName: circtest_plain_plotting {
				memory = '16 GB'
				executor = 'slurm'
				queue = 'medium'
				time='48h'
				}

			withName: run_cluster_profiler {
				memory = '16 GB'
				executor = 'slurm'
				queue = 'medium'
				time='48h'
				}

			withName: prepare_for_CRAFT {
				memory = '16 GB'
				executor = 'slurm'
				queue = 'express'
				time='1h'
				}

			withName: run_craft {
				time='48h'
				queue = 'medium'
				executor = 'slurm'
				memory = '34 GB'		

			}

			withName: deepTarget {
				time='1h'
				queue = 'express'
				executor = 'slurm'
				memory = '16 GB'		
			}

		}//process block for slurm profile


	}//slurm profile



	singularity {

		singularity {
			enabled=true
			autoMounts =true
			runOptions=' --writable-tmpfs ' 
		}//singularity for singularity profile


		process {
			withName: runFQC {
				container = 'eddieasalinas/circrnaflow:fastqc'
			}

			withName: runFlexBar {
				container = 'eddieasalinas/circrnaflow:flexbar'
			}

			withName: mapAgainstRRNA {
				container = 'eddieasalinas/circrnaflow:bowtie2'
			}

			withName: star_align_pair {
				container = 'eddieasalinas/circrnaflow:STAR'
			}

			withName: star_align_first {
				container = 'eddieasalinas/circrnaflow:STAR'
			}

			withName: star_align_second {
				container = 'eddieasalinas/circrnaflow:STAR'
			}

			withName: DCC_step {
				container = 'eddieasalinas/circrnaflow:DCC'
			}

			withName: circtest {
				container = 'eddieasalinas/circrnaflow:CircTest'
			}

			withName: circtest_plain {
				container = 'eddieasalinas/circrnaflow:CircTest'
				}

			withName: circtest_plotting {
				container = 'eddieasalinas/circrnaflow:Utility'
			}

			withName: run_cluster_profiler { 
				container = 'eddieasalinas/circrnaflow:ClusterProfiler'
			}

			withName: circtest_plain_plotting {
				container = 'eddieasalinas/circrnaflow:Utility'
			}

			withName: prepare_for_CRAFT {
				container = 'eddieasalinas/circrnaflow:craft'
				}

			withName: run_craft {
				container = 'eddieasalinas/circrnaflow:craft'
			}

			withName: deepTarget {
				container = 'eddieasalinas/circrnaflow:KipoiDeepTarget'
			}

		}//processes

	}//singularity profile

}//profiles

//general process configurations (for output directories)
process {
	withName: runFQC {
		publishDir="$params.outdir/FastQC/" 
    	}

	withName: mapAgainstRRNA {
		publishDir="$params.outdir/rRNA_cleaned_star_input/"
	}

	withName: star_align_pair {
		publishDir="$params.outdir/star_output_pair/"
	}

	withName: star_align_first {
		publishDir="$params.outdir/star_output_first/"
	}

	withName: star_align_second {
		publishDir="$params.outdir/star_output_second/"
	}

	withName: DCC_step {
		publishDir="$params.outdir/DCC/"
	}

	withName: circtest {
		publishDir="$params.outdir/circtest/"
	}

	withName: circtest_plain {
		publishDir="$params.outdir/circtest_plain/"
		}

	withName: circtest_plotting {
		publishDir="$params.outdir/circtest_plotting/"
	}

	withName: run_cluster_profiler { 
		publishDir="$params.outdir/cluster_profiler/"
	}

	withName: circtest_plain_plotting {
		publishDir="$params.outdir/circtest_plotting_plain/"
	}

	withName: prepare_for_CRAFT {
		publishDir="$params.outdir/craft_prep" 
		}

	withName: run_craft {
		publishDir="$params.outdir/craft" 

	}

	withName: deepTarget {
		publishDir="$params.outdir/deeptarget/"
	}

}

